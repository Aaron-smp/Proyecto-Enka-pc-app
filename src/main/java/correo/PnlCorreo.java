/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package correo;

import com.google.cloud.firestore.Firestore;
import java.awt.CardLayout;
import java.awt.Font;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.MessagingException;
import javax.swing.DefaultListModel;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import utils.UtilsCorreo;

/**
 *
 * @author Aaron
 */
public class PnlCorreo extends javax.swing.JPanel {

    /**
     * Creates new form PnlCorreo
     */
    
    private Firestore firestore;
    private ArrayList<Email> emails;
    private EnviarCorreo recibirCorreos;
    
    public PnlCorreo(Firestore firestore) {
        initComponents();
        this.firestore = firestore;
        UtilsCorreo util = new UtilsCorreo(firestore);
        PnlAjustesCorreo ajustes = new PnlAjustesCorreo(firestore);
        cardLayout.add(scroll, "entrada");
        cardLayout.add(ajustes, "ajustes");
        cardLayout.add(new PnlEnviarCorreo(this.firestore), "correo");
        CardLayout card = (CardLayout) cardLayout.getLayout();
        card.show(cardLayout, "entrada");
        try{
            if(!util.getContrase√±a().isBlank() && !util.getEmail().isEmpty()){
                Thread h1 = new Thread(new Runnable(){
                    @Override
                    public void run() {
                        refrescarListaCorreos();
                    }
                });
                h1.start();
            }
        }catch(NullPointerException e){
            e.printStackTrace();
        }
        
        Font headerFont = new Font("Poppins Light", Font.PLAIN, 22);
        JTableHeader header = tablaCorreos.getTableHeader();
        header.setFont(headerFont);
        tablaCorreos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tablaCorreos.setRowSelectionAllowed(true);
        tablaCorreos.setColumnSelectionAllowed(false);
        
        tablaCorreos.setRowHeight(60);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        cardLayout = new javax.swing.JPanel();
        scroll = new javax.swing.JScrollPane();
        tablaCorreos = new javax.swing.JTable();
        panelEntrada = new javax.swing.JScrollPane();
        listaEntrada = new javax.swing.JList<>();
        jPanel5 = new javax.swing.JPanel();
        bandeja = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        refrescar = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.BorderLayout());

        cardLayout.setLayout(new java.awt.CardLayout());

        tablaCorreos.setFont(new java.awt.Font("Poppins", 0, 20)); // NOI18N
        tablaCorreos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Remitente", "Asunto", "Fecha recibido"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaCorreos.setShowGrid(true);
        tablaCorreos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaCorreosMouseClicked(evt);
            }
        });
        scroll.setViewportView(tablaCorreos);

        cardLayout.add(scroll, "card3");

        listaEntrada.setFont(new java.awt.Font("Poppins", 0, 20)); // NOI18N
        listaEntrada.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Cargando..." };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listaEntrada.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaEntradaMouseClicked(evt);
            }
        });
        panelEntrada.setViewportView(listaEntrada);

        cardLayout.add(panelEntrada, "card2");

        jPanel3.add(cardLayout, java.awt.BorderLayout.CENTER);

        jPanel5.setLayout(new java.awt.BorderLayout());

        bandeja.setFont(new java.awt.Font("Poppins", 0, 30)); // NOI18N
        bandeja.setText("Bandeja de entrada");
        jPanel5.add(bandeja, java.awt.BorderLayout.CENTER);

        jPanel6.setLayout(new java.awt.BorderLayout());

        jButton5.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        jButton5.setText("Bandeja de entrada");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton5, java.awt.BorderLayout.CENTER);

        jPanel5.add(jPanel6, java.awt.BorderLayout.EAST);

        jPanel3.add(jPanel5, java.awt.BorderLayout.NORTH);

        jPanel1.add(jPanel3, java.awt.BorderLayout.CENTER);

        jPanel2.setMaximumSize(new java.awt.Dimension(500, 2147483647));
        jPanel2.setPreferredSize(new java.awt.Dimension(765, 130));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Poppins", 0, 30)); // NOI18N
        jLabel1.setText("Acciones");
        jLabel1.setPreferredSize(new java.awt.Dimension(136, 60));
        jPanel2.add(jLabel1, java.awt.BorderLayout.NORTH);

        jPanel4.setPreferredSize(new java.awt.Dimension(866, 50));
        jPanel4.setLayout(new java.awt.GridLayout(1, 5));

        jButton6.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jButton6.setText("Nuevo correo");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton6);

        jButton2.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jButton2.setText("Leer correo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton2);

        refrescar.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        refrescar.setText("Refrescar");
        refrescar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refrescarActionPerformed(evt);
            }
        });
        jPanel4.add(refrescar);

        eliminar.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        eliminar.setText("Eliminar");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });
        jPanel4.add(eliminar);

        jButton7.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jButton7.setText("Ajustes");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton7);

        jPanel2.add(jPanel4, java.awt.BorderLayout.CENTER);

        jPanel7.setPreferredSize(new java.awt.Dimension(918, 30));
        jPanel2.add(jPanel7, java.awt.BorderLayout.SOUTH);

        jPanel1.add(jPanel2, java.awt.BorderLayout.SOUTH);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if(!bandeja.getText().equals("Bandeja de entrada")){
            bandeja.setText("Bandeja de entrada");
            CardLayout card = (CardLayout) cardLayout.getLayout();
            card.show(cardLayout, "entrada");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if(!bandeja.getText().equals("Ajustes del servidor")){
            bandeja.setText("Ajustes del servidor");
            CardLayout card = (CardLayout) cardLayout.getLayout();
            card.show(cardLayout, "ajustes");
            
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        bandeja.setText("Enviar correo");
        CardLayout card = (CardLayout) cardLayout.getLayout();
        card.show(cardLayout, "correo");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void listaEntradaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaEntradaMouseClicked
        if (evt.getClickCount() == 2) {
            int indice = listaEntrada.locationToIndex(evt.getPoint());
            Email email = emails.get(indice);
            System.out.println(email.getCuerpo());
            WebViewPanel vista = new WebViewPanel(email.getCuerpo());
            vista.loadContent();
            cardLayout.add(vista, "vista");
            CardLayout card = (CardLayout) cardLayout.getLayout();
            card.show(cardLayout, "vista");
            bandeja.setText("Email");
            String valor = listaEntrada.getModel().getElementAt(indice);
            System.out.println("Valor seleccionado: " + valor);
        }
    }//GEN-LAST:event_listaEntradaMouseClicked

    private void refrescarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refrescarActionPerformed
        Thread h1 = new Thread(new Runnable(){
            @Override
            public void run() {
                refrescarUltimaHora();
            }
        });
        h1.start();
    }//GEN-LAST:event_refrescarActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        recibirCorreos.eliminarCorreo(tablaCorreos.getSelectedRow());
        DefaultTableModel modelo = (DefaultTableModel) tablaCorreos.getModel();
        modelo.removeRow(tablaCorreos.getSelectedRow());
        emails.remove(tablaCorreos.getSelectedRow());
        tablaCorreos.updateUI();
    }//GEN-LAST:event_eliminarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int indice = tablaCorreos.getSelectedRow();    
        Email email = emails.get(indice);
        System.out.println(email.getCuerpo());
        WebViewPanel vista = new WebViewPanel(email.getCuerpo());
        vista.loadContent();
        cardLayout.add(vista, "vista");
        CardLayout card = (CardLayout) cardLayout.getLayout();
        card.show(cardLayout, "vista");
        bandeja.setText("Email");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tablaCorreosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaCorreosMouseClicked
        if (evt.getClickCount() == 2) {
            int indice = tablaCorreos.getSelectedRow();
            Email email = emails.get(indice);
            System.out.println(email.getCuerpo());
            WebViewPanel vista = new WebViewPanel(email.getCuerpo());
            vista.loadContent();
            cardLayout.add(vista, "vista");
            CardLayout card = (CardLayout) cardLayout.getLayout();
            card.show(cardLayout, "vista");
            bandeja.setText("Email");
        }
    }//GEN-LAST:event_tablaCorreosMouseClicked
    
    private void refrescarListaCorreos(){
        UtilsCorreo util = new UtilsCorreo(firestore);
        String contra = util.getContrase√±a();
        if(contra != null){
            recibirCorreos = new EnviarCorreo("", "",
                            "", util.getPuertoSmtp(),
                            util.getServidorSmtp(), util.getEmail(), contra);
            try {
                emails = recibirCorreos.leerCorreo();
            } catch (MessagingException ex) {
                Logger.getLogger(PnlCorreo.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(PnlCorreo.class.getName()).log(Level.SEVERE, null, ex);
            }
            DefaultListModel<String> model = new DefaultListModel<>();
            DefaultTableModel modelo = (DefaultTableModel) tablaCorreos.getModel();
            listaEntrada.setModel(model);
            tablaCorreos.setModel(modelo);

            for(int i = 0; i < emails.size(); i++){
                String remitente = emails.get(i).getRemitentePrincipal();
                String asunto = emails.get(i).getAsunto();
                String fecha = emails.get(i).getFechaRecibido();
                model.addElement(remitente + " | Asunto: " + asunto + " | Fecha: " + fecha);
                modelo.addRow(new Object[] {remitente, asunto, fecha});
                try {
                    Thread.sleep(100);
                } catch (InterruptedException ex) {
                    Logger.getLogger(PnlCorreo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }
    
    public void refrescarUltimaHora(){
        try {
            ArrayList<Email> emailsNuevos = new ArrayList();
            emailsNuevos = recibirCorreos.correosUltimaHora(emails);
            DefaultListModel<String> model = (DefaultListModel<String>) listaEntrada.getModel();
            DefaultTableModel modelo = (DefaultTableModel) tablaCorreos.getModel();
            tablaCorreos.setModel(modelo);
            for(int i = emailsNuevos.size()-1; i >= 0; i--){
                String remitente = emailsNuevos.get(i).getRemitentePrincipal();
                String asunto = emailsNuevos.get(i).getAsunto();
                String fecha = emailsNuevos.get(i).getFechaRecibido();
                
                if(!emailsNuevos.get(i).getAsunto().equals(emails.get(i).getAsunto())){
                    model.add(0, obtenerRemitente(remitente) + " | Asunto: " + asunto);
                    modelo.addRow(new Object[] {remitente, asunto, fecha});
                    emails.add(0,emailsNuevos.get(i));
                }
                try {
                    Thread.sleep(300);
                } catch (InterruptedException ex) {
                    Logger.getLogger(PnlCorreo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (MessagingException ex) {
            Logger.getLogger(PnlCorreo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(PnlCorreo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public String obtenerRemitente(String str) {
        int indiceInicio = str.indexOf("<");
        int indiceFin = str.indexOf(">");
        if (indiceInicio == -1 || indiceFin == -1) {
            return str;
        }
        
        String correo = str.substring(indiceInicio + 1, indiceFin);
        String remitente = str.substring(0, indiceInicio).trim();

        return remitente;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bandeja;
    private javax.swing.JPanel cardLayout;
    private javax.swing.JButton eliminar;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JList<String> listaEntrada;
    private javax.swing.JScrollPane panelEntrada;
    private javax.swing.JButton refrescar;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JTable tablaCorreos;
    // End of variables declaration//GEN-END:variables
}
