/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.enka;

import animales.PnlAnimales;
import com.formdev.flatlaf.intellijthemes.FlatGradiantoNatureGreenIJTheme;
import com.formdev.flatlaf.intellijthemes.materialthemeuilite.FlatArcDarkIJTheme;
import com.formdev.flatlaf.intellijthemes.materialthemeuilite.FlatGitHubContrastIJTheme;
import com.formdev.flatlaf.intellijthemes.materialthemeuilite.FlatNightOwlIJTheme;
import com.formdev.flatlaf.intellijthemes.materialthemeuilite.FlatSolarizedLightIJTheme;
import com.google.api.core.ApiFuture;
import com.google.auth.oauth2.GoogleCredentials;
import com.google.cloud.firestore.CollectionReference;
import com.google.cloud.firestore.DocumentSnapshot;
import com.google.cloud.firestore.Firestore;
import com.google.cloud.firestore.QuerySnapshot;
import com.google.firebase.FirebaseApp;
import com.google.firebase.FirebaseOptions;
import com.google.firebase.cloud.FirestoreClient;
import correo.PnlCorreo;
import inicio.PnlInicio;
import inicioSesion.RegistroSesion;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Point;
import java.io.IOException;
import java.io.InputStream;
import java.net.URISyntaxException;
import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import perfil.PnlPerfil;
import ventas.PnlBase;

/**
 *
 * @author Aaron
 */
public class Enka extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    private Point clickInicial;
    private boolean pantallaCompleta = false;
    private Firestore firestore;
    //Por defecto
    private final Color DEFAULT_OSC = new Color(90, 90, 90);
    private final Color DEFAULT_CLA = new Color(236, 213, 213);
    //Soleado
    private final Color SOLEADO_CLA = new Color(253, 246, 247);
    private final Color SOLEADO_OSC = new Color(213, 206, 187);
    //Noche oscura
    private final Color NOCHE_CLA = new Color(90, 90, 100);
    private final Color NOCHE_OSC = new Color(27, 32, 43);
    //Azul zafiro
    private final Color AZUL_CLA = new Color(220, 220, 220);
    private final Color AZUL_OSC = new Color(1, 22, 39);
    //Bosque esmeralda
    private final Color BOSQUE_CLA = new Color(152, 184, 183);
    private final Color BOSQUE_OSC = new Color(32, 64, 63);
    private Color oscuro = DEFAULT_OSC;
    private Color claro = DEFAULT_CLA;
    
    private boolean pantallaCom = false;
    
    public Enka() {
        initComponents();
        crearConexion();
        primeraVez();
        ImageIcon icono = new ImageIcon(getClass().getResource("/iconos/vaca.png"));
        this.setIconImage(icono.getImage());
        CardLayout card = new CardLayout();
        pantallaPrincipal.setLayout(card);
        PnlAnimales pnlAni = new PnlAnimales(this.firestore, this);
        pnlAni.refrescarBovino();
        pnlAni.refrescarPorcino();
        pnlAni.refrescarAves();
        String[] nombres = datosPerf();
        PnlInicio pnlIni = new PnlInicio(nombres, firestore);
        PnlBase pnlVent = new PnlBase(this.firestore);
        PnlCorreo pnlCorre = new PnlCorreo(this.firestore);
        PnlPerfil pnlPerf = new PnlPerfil(this.firestore, this);
        pnlPerf.iniciarDatos();
        pnlPerf.refrescarUsuarios();
        pantallaPrincipal.add(pnlIni, "inicio");
        pantallaPrincipal.add(pnlAni, "animales");
        pantallaPrincipal.add(pnlVent, "ventas");
        pantallaPrincipal.add(pnlCorre, "correo");
        pantallaPrincipal.add(pnlPerf, "perfil");
        
        card.show(pantallaPrincipal, "inicio");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem6 = new javax.swing.JMenuItem();
        contenedor = new javax.swing.JPanel();
        pantallaPrincipal = new javax.swing.JPanel();
        menuLateral = new javax.swing.JPanel();
        pnlInicio = new javax.swing.JPanel();
        labelIni = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        pnlAnimales = new javax.swing.JPanel();
        labelAni = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        pnlVentas = new javax.swing.JPanel();
        labelVent = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        pnlCorreo = new javax.swing.JPanel();
        labelCorr = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        pnlPerfil = new javax.swing.JPanel();
        labelPerf = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        pntCom = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        informacion = new javax.swing.JMenu();
        paginaMinisterio = new javax.swing.JMenuItem();
        trazabilidadBovino = new javax.swing.JMenuItem();
        trazabilidadPorcino = new javax.swing.JMenuItem();
        trazabilidadAves = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();

        jMenuItem6.setText("jMenuItem6");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ENKA | Inicio");
        setMinimumSize(new java.awt.Dimension(600, 400));
        setPreferredSize(new java.awt.Dimension(1200, 670));

        contenedor.setMinimumSize(new java.awt.Dimension(206, 500));
        contenedor.setPreferredSize(new java.awt.Dimension(900, 900));
        contenedor.setLayout(new java.awt.BorderLayout());

        pantallaPrincipal.setLayout(new java.awt.BorderLayout());
        contenedor.add(pantallaPrincipal, java.awt.BorderLayout.CENTER);

        menuLateral.setBackground(new java.awt.Color(255, 255, 255));
        menuLateral.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        menuLateral.setMinimumSize(new java.awt.Dimension(200, 0));
        menuLateral.setOpaque(false);
        menuLateral.setPreferredSize(new java.awt.Dimension(200, 600));
        menuLateral.setLayout(new java.awt.GridLayout(5, 1));

        pnlInicio.setBackground(new java.awt.Color(90, 90, 90));
        pnlInicio.setForeground(new java.awt.Color(60, 60, 60));
        pnlInicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlInicioMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlInicioMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlInicioMouseExited(evt);
            }
        });
        pnlInicio.setLayout(new java.awt.BorderLayout());

        labelIni.setFont(new java.awt.Font("Poppins", 0, 30)); // NOI18N
        labelIni.setForeground(new java.awt.Color(238, 238, 238));
        labelIni.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelIni.setText("Inicio");
        labelIni.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        pnlInicio.add(labelIni, java.awt.BorderLayout.SOUTH);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new ImageIcon(getClass().getResource("/iconos/hogar.png")));
        pnlInicio.add(jLabel8, java.awt.BorderLayout.CENTER);

        menuLateral.add(pnlInicio);

        pnlAnimales.setBackground(new java.awt.Color(90, 90, 90));
        pnlAnimales.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlAnimalesMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlAnimalesMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlAnimalesMouseExited(evt);
            }
        });
        pnlAnimales.setLayout(new java.awt.BorderLayout());

        labelAni.setFont(new java.awt.Font("Poppins", 0, 30)); // NOI18N
        labelAni.setForeground(new java.awt.Color(255, 255, 255));
        labelAni.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelAni.setText("Animales");
        pnlAnimales.add(labelAni, java.awt.BorderLayout.SOUTH);
        pnlAnimales.add(jLabel6, java.awt.BorderLayout.CENTER);
        pnlAnimales.add(jLabel9, java.awt.BorderLayout.CENTER);

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setIcon(new ImageIcon(getClass().getResource("/iconos/ganado.png")));
        pnlAnimales.add(jLabel11, java.awt.BorderLayout.CENTER);

        menuLateral.add(pnlAnimales);

        pnlVentas.setBackground(new java.awt.Color(90, 90, 90));
        pnlVentas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlVentasMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlVentasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlVentasMouseExited(evt);
            }
        });
        pnlVentas.setLayout(new java.awt.BorderLayout());

        labelVent.setFont(new java.awt.Font("Poppins", 0, 27)); // NOI18N
        labelVent.setForeground(new java.awt.Color(238, 238, 238));
        labelVent.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelVent.setText("Ventas|Gastos");
        pnlVentas.add(labelVent, java.awt.BorderLayout.SOUTH);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setIcon(new ImageIcon(getClass().getResource("/iconos/ventas.png")));
        pnlVentas.add(jLabel7, java.awt.BorderLayout.CENTER);

        menuLateral.add(pnlVentas);

        pnlCorreo.setBackground(new java.awt.Color(90, 90, 90));
        pnlCorreo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlCorreoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlCorreoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlCorreoMouseExited(evt);
            }
        });
        pnlCorreo.setLayout(new java.awt.BorderLayout());

        labelCorr.setFont(new java.awt.Font("Poppins", 0, 30)); // NOI18N
        labelCorr.setForeground(new java.awt.Color(255, 255, 255));
        labelCorr.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelCorr.setText("Correo");
        pnlCorreo.add(labelCorr, java.awt.BorderLayout.SOUTH);

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setIcon(new ImageIcon(getClass().getResource("/iconos/correo.png")));
        pnlCorreo.add(jLabel10, java.awt.BorderLayout.CENTER);

        menuLateral.add(pnlCorreo);

        pnlPerfil.setBackground(new java.awt.Color(90, 90, 90));
        pnlPerfil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlPerfilMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlPerfilMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlPerfilMouseExited(evt);
            }
        });
        pnlPerfil.setLayout(new java.awt.BorderLayout());

        labelPerf.setFont(new java.awt.Font("Poppins", 0, 30)); // NOI18N
        labelPerf.setForeground(new java.awt.Color(238, 238, 238));
        labelPerf.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelPerf.setText("Perfil");
        pnlPerfil.add(labelPerf, java.awt.BorderLayout.SOUTH);

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setIcon(new ImageIcon(getClass().getResource("/iconos/perfil.png")));
        pnlPerfil.add(jLabel12, java.awt.BorderLayout.CENTER);

        menuLateral.add(pnlPerfil);

        contenedor.add(menuLateral, java.awt.BorderLayout.LINE_START);

        jMenu1.setText("Cambiar colores");

        jMenuItem1.setText("Por defecto");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Soleado");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Noche oscura");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Azul zafiro");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setText("Bosque esmeralda");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        pntCom.setText("Pantalla");

        jMenuItem9.setText("Pantalla completa");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        pntCom.add(jMenuItem9);

        jMenuBar1.add(pntCom);

        jMenu2.setText("Ayuda");

        informacion.setText("Informacion legal");

        paginaMinisterio.setText("Pagina oficial ministerio de agricultura, pesca y alimentacion");
        paginaMinisterio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paginaMinisterioActionPerformed(evt);
            }
        });
        informacion.add(paginaMinisterio);

        trazabilidadBovino.setText("Trazabilidad ganado bovino");
        trazabilidadBovino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trazabilidadBovinoActionPerformed(evt);
            }
        });
        informacion.add(trazabilidadBovino);

        trazabilidadPorcino.setText("Trazabilidad ganado porcino");
        trazabilidadPorcino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trazabilidadPorcinoActionPerformed(evt);
            }
        });
        informacion.add(trazabilidadPorcino);

        trazabilidadAves.setText("Trazabilidad de aves");
        trazabilidadAves.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trazabilidadAvesActionPerformed(evt);
            }
        });
        informacion.add(trazabilidadAves);

        jMenu2.add(informacion);

        jMenuItem7.setText("Acerca de Enka");
        jMenu2.add(jMenuItem7);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contenedor, javax.swing.GroupLayout.DEFAULT_SIZE, 1117, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contenedor, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void pnlInicioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlInicioMouseClicked
        CardLayout card = (CardLayout) pantallaPrincipal.getLayout();
        card.show(pantallaPrincipal, "inicio");
        this.setTitle("ENKA | Inicio");
    }//GEN-LAST:event_pnlInicioMouseClicked

    private void pnlAnimalesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlAnimalesMouseClicked
        CardLayout card = (CardLayout) pantallaPrincipal.getLayout();
        card.show(pantallaPrincipal, "animales");
        this.setTitle("ENKA | Animales");
    }//GEN-LAST:event_pnlAnimalesMouseClicked

    private void pnlInicioMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlInicioMouseEntered
        pnlInicio.setBackground(claro);
    }//GEN-LAST:event_pnlInicioMouseEntered

    private void pnlInicioMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlInicioMouseExited
        pnlInicio.setBackground(oscuro);
    }//GEN-LAST:event_pnlInicioMouseExited

    private void pnlAnimalesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlAnimalesMouseEntered
        pnlAnimales.setBackground(claro);
    }//GEN-LAST:event_pnlAnimalesMouseEntered

    private void pnlAnimalesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlAnimalesMouseExited
        pnlAnimales.setBackground(oscuro);
    }//GEN-LAST:event_pnlAnimalesMouseExited

    private void pnlVentasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlVentasMouseEntered
        pnlVentas.setBackground(claro);
    }//GEN-LAST:event_pnlVentasMouseEntered

    private void pnlVentasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlVentasMouseExited
        pnlVentas.setBackground(oscuro);
    }//GEN-LAST:event_pnlVentasMouseExited

    private void pnlCorreoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCorreoMouseEntered
        pnlCorreo.setBackground(claro);
    }//GEN-LAST:event_pnlCorreoMouseEntered

    private void pnlCorreoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCorreoMouseExited
        pnlCorreo.setBackground(oscuro);
    }//GEN-LAST:event_pnlCorreoMouseExited

    private void pnlPerfilMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlPerfilMouseEntered
        pnlPerfil.setBackground(claro);
    }//GEN-LAST:event_pnlPerfilMouseEntered

    private void pnlPerfilMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlPerfilMouseExited
        pnlPerfil.setBackground(oscuro);
    }//GEN-LAST:event_pnlPerfilMouseExited

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        try {
            UIManager.setLookAndFeel(new FlatSolarizedLightIJTheme());
            SwingUtilities.updateComponentTreeUI(this);
            oscuro = SOLEADO_OSC;
            claro = SOLEADO_CLA;
            labelIni.setForeground(SOLEADO_CLA);
            labelAni.setForeground(SOLEADO_CLA);
            labelVent.setForeground(SOLEADO_CLA);
            labelCorr.setForeground(SOLEADO_CLA);
            labelPerf.setForeground(SOLEADO_CLA);
            pnlInicio.setBackground(SOLEADO_OSC);
            pnlAnimales.setBackground(SOLEADO_OSC);
            pnlVentas.setBackground(SOLEADO_OSC);
            pnlCorreo.setBackground(SOLEADO_OSC);
            pnlPerfil.setBackground(SOLEADO_OSC);
        } catch (Exception e) {
            // Manejar la excepción
            e.printStackTrace();
        } 
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try {
            UIManager.setLookAndFeel(new FlatGitHubContrastIJTheme());
            SwingUtilities.updateComponentTreeUI(this);
            oscuro = DEFAULT_OSC;
            claro = DEFAULT_CLA;
            labelIni.setForeground(DEFAULT_CLA);
            labelAni.setForeground(DEFAULT_CLA);
            labelVent.setForeground(DEFAULT_CLA);
            labelCorr.setForeground(DEFAULT_CLA);
            labelPerf.setForeground(DEFAULT_CLA);
            pnlInicio.setBackground(DEFAULT_OSC);
            pnlAnimales.setBackground(DEFAULT_OSC);
            pnlVentas.setBackground(DEFAULT_OSC);
            pnlCorreo.setBackground(DEFAULT_OSC);
            pnlPerfil.setBackground(DEFAULT_OSC);
        } catch (Exception e) {
            // Manejar la excepción
            e.printStackTrace();
        } 
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        try {
            UIManager.setLookAndFeel(new FlatArcDarkIJTheme());
            SwingUtilities.updateComponentTreeUI(this);
            oscuro = NOCHE_OSC;
            claro = NOCHE_CLA;
            labelIni.setForeground(NOCHE_CLA);
            labelAni.setForeground(NOCHE_CLA);
            labelVent.setForeground(NOCHE_CLA);
            labelCorr.setForeground(NOCHE_CLA);
            labelPerf.setForeground(NOCHE_CLA);
            pnlInicio.setBackground(NOCHE_OSC);
            pnlAnimales.setBackground(NOCHE_OSC);
            pnlVentas.setBackground(NOCHE_OSC);
            pnlCorreo.setBackground(NOCHE_OSC);
            pnlPerfil.setBackground(NOCHE_OSC);
        } catch (Exception e) {
            // Manejar la excepción
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        try {
            UIManager.setLookAndFeel(new FlatNightOwlIJTheme());
            SwingUtilities.updateComponentTreeUI(this);
            oscuro = AZUL_OSC;
            claro = AZUL_CLA;
            labelIni.setForeground(AZUL_CLA);
            labelAni.setForeground(AZUL_CLA);
            labelVent.setForeground(AZUL_CLA);
            labelCorr.setForeground(AZUL_CLA);
            labelPerf.setForeground(AZUL_CLA);
            pnlInicio.setBackground(AZUL_OSC);
            pnlAnimales.setBackground(AZUL_OSC);
            pnlVentas.setBackground(AZUL_OSC);
            pnlCorreo.setBackground(AZUL_OSC);
            pnlPerfil.setBackground(AZUL_OSC);
        } catch (Exception e) {
            // Manejar la excepción
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        try {
            UIManager.setLookAndFeel(new FlatGradiantoNatureGreenIJTheme());
            SwingUtilities.updateComponentTreeUI(this);
            oscuro = BOSQUE_OSC;
            claro = BOSQUE_CLA;
            labelIni.setForeground(BOSQUE_CLA);
            labelAni.setForeground(BOSQUE_CLA);
            labelVent.setForeground(BOSQUE_CLA);
            labelCorr.setForeground(BOSQUE_CLA);
            labelPerf.setForeground(BOSQUE_CLA);
            pnlInicio.setBackground(BOSQUE_OSC);
            pnlAnimales.setBackground(BOSQUE_OSC);
            pnlVentas.setBackground(BOSQUE_OSC);
            pnlCorreo.setBackground(BOSQUE_OSC);
            pnlPerfil.setBackground(BOSQUE_OSC);
        } catch (Exception e) {
            // Manejar la excepción
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        GraphicsEnvironment env = GraphicsEnvironment.getLocalGraphicsEnvironment();
        GraphicsDevice dispositivo = env.getDefaultScreenDevice();
        if(!pantallaCom){
            dispositivo.setFullScreenWindow(this);
            pantallaCom = true;
        }else{
            dispositivo.setFullScreenWindow(null);
            pantallaCom = false;
        }
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void pnlPerfilMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlPerfilMouseClicked
        CardLayout card = (CardLayout) pantallaPrincipal.getLayout();
        card.show(pantallaPrincipal, "perfil");
        this.setTitle("ENKA | Perfil");
    }//GEN-LAST:event_pnlPerfilMouseClicked

    private void pnlCorreoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlCorreoMouseClicked
        CardLayout card = (CardLayout) pantallaPrincipal.getLayout();
        card.show(pantallaPrincipal, "correo");
        this.setTitle("ENKA | Correo");
    }//GEN-LAST:event_pnlCorreoMouseClicked

    private void pnlVentasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlVentasMouseClicked
        CardLayout card = (CardLayout) pantallaPrincipal.getLayout();
        card.show(pantallaPrincipal, "ventas");
        this.setTitle("ENKA | Ventas");
    }//GEN-LAST:event_pnlVentasMouseClicked

    private void paginaMinisterioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paginaMinisterioActionPerformed
        if (java.awt.Desktop.isDesktopSupported()) {
            java.awt.Desktop desktop = java.awt.Desktop.getDesktop();
 
            if (desktop.isSupported(java.awt.Desktop.Action.BROWSE)) {
                try {
                    java.net.URI uri = new java.net.URI("https://www.mapa.gob.es/es/ganaderia/temas/default.aspx");
                    desktop.browse(uri);
                } catch (URISyntaxException | IOException ex) {
                    Logger.getLogger(Enka.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_paginaMinisterioActionPerformed

    private void trazabilidadBovinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trazabilidadBovinoActionPerformed
        if (java.awt.Desktop.isDesktopSupported()) {
            java.awt.Desktop desktop = java.awt.Desktop.getDesktop();
 
            if (desktop.isSupported(java.awt.Desktop.Action.BROWSE)) {
                try {
                    java.net.URI uri = new java.net.URI("https://www.mapa.gob.es/es/ganaderia/temas/trazabilidad-animal/identificacion-animal/bovino/");
                    desktop.browse(uri);
                } catch (URISyntaxException | IOException ex) {
                    Logger.getLogger(Enka.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_trazabilidadBovinoActionPerformed

    private void trazabilidadPorcinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trazabilidadPorcinoActionPerformed
        if (java.awt.Desktop.isDesktopSupported()) {
            java.awt.Desktop desktop = java.awt.Desktop.getDesktop();
 
            if (desktop.isSupported(java.awt.Desktop.Action.BROWSE)) {
                try {
                    java.net.URI uri = new java.net.URI("https://www.mapa.gob.es/es/ganaderia/temas/trazabilidad-animal/identificacion-animal/otras-especies/#ancla0");
                    desktop.browse(uri);
                } catch (URISyntaxException | IOException ex) {
                    Logger.getLogger(Enka.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_trazabilidadPorcinoActionPerformed

    private void trazabilidadAvesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trazabilidadAvesActionPerformed
        if (java.awt.Desktop.isDesktopSupported()) {
            java.awt.Desktop desktop = java.awt.Desktop.getDesktop();
 
            if (desktop.isSupported(java.awt.Desktop.Action.BROWSE)) {
                try {
                    java.net.URI uri = new java.net.URI("https://www.mapa.gob.es/es/ganaderia/temas/trazabilidad-animal/identificacion-animal/otras-especies/#ancla1");
                    desktop.browse(uri);
                } catch (URISyntaxException | IOException ex) {
                    Logger.getLogger(Enka.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_trazabilidadAvesActionPerformed
    
    public void crearConexion(){
        try {
            ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
            String filePath = "src/main/recursos/credenciales/firebaseConexion.json";
            InputStream is = getClass().getClassLoader().getResourceAsStream("credenciales/firebaseConexion.json");
            //InputStream is = new FileInputStream(filePath);
            //InputStream is = classLoader.getResourceAsStream("src/main/recursos/credenciales/firebaseConexion.json");
            GoogleCredentials googleCredentials = GoogleCredentials.fromStream(is);
            FirebaseOptions options = new FirebaseOptions.Builder()
                .setCredentials(googleCredentials)
                .build();
            
            FirebaseApp.initializeApp(options);
            firestore = FirestoreClient.getFirestore();
        } catch (IOException ex) {
            Logger.getLogger(RegistroSesion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void setFirestore(Firestore firestore) {
        this.firestore = firestore;
    }
    
    public void primeraVez(){
        try {
            CollectionReference empresa = firestore.collection("empresa");
            ApiFuture<QuerySnapshot> querySnapshot = empresa.get();
            
            if(querySnapshot.get().getDocuments().isEmpty()){
                RegistroSesion sesion = new RegistroSesion(null, true, firestore);
                firestore = sesion.getFirestore();
                sesion.setVisible(true);
                if(sesion.isContinuar() == false){
                    System.exit(0);
                }
            }else{
                //InicioSesion sesion = new InicioSesion(null, true, this.firestore);
                //sesion.setVisible(true);
                //if(sesion.isContinuar() == false){
                //    System.exit(0);
                //}
            }
        } catch (InterruptedException ex) {
            Logger.getLogger(Enka.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ExecutionException ex) {
            Logger.getLogger(Enka.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public String[] datosPerf(){
        String[] nombres = new String[2];;
        try {
            String nombreGanadero = "";
            String nombreExplotacion = "";
            CollectionReference empresa = firestore.collection("empresa");
            ApiFuture<QuerySnapshot> querySnapshot = empresa.get();
            
            
            for (DocumentSnapshot document : querySnapshot.get().getDocuments()) {
                if(document.getId().equals("administrador")){
                    nombreGanadero = document.getString("ganadero");
                    nombres[1] = nombreGanadero;
                    nombreExplotacion = document.getString("explotacion");
                    nombres[0] = nombreExplotacion;
                }
            }
        } catch (InterruptedException ex) {
            Logger.getLogger(Enka.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ExecutionException ex) {
            Logger.getLogger(Enka.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return nombres;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
        /* Set the Nimbus look and feel */
        FlatGitHubContrastIJTheme.setup();
        
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Enka().setVisible(true);
            }
        }); 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel contenedor;
    private javax.swing.JMenu informacion;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JLabel labelAni;
    private javax.swing.JLabel labelCorr;
    private javax.swing.JLabel labelIni;
    private javax.swing.JLabel labelPerf;
    private javax.swing.JLabel labelVent;
    private javax.swing.JPanel menuLateral;
    private javax.swing.JMenuItem paginaMinisterio;
    private javax.swing.JPanel pantallaPrincipal;
    private javax.swing.JPanel pnlAnimales;
    private javax.swing.JPanel pnlCorreo;
    private javax.swing.JPanel pnlInicio;
    private javax.swing.JPanel pnlPerfil;
    private javax.swing.JPanel pnlVentas;
    private javax.swing.JMenu pntCom;
    private javax.swing.JMenuItem trazabilidadAves;
    private javax.swing.JMenuItem trazabilidadBovino;
    private javax.swing.JMenuItem trazabilidadPorcino;
    // End of variables declaration//GEN-END:variables
}
