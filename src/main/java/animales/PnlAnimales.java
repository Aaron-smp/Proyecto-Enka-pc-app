/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package animales;

import com.google.cloud.firestore.DocumentReference;
import com.google.cloud.firestore.Firestore;
import com.google.cloud.firestore.QueryDocumentSnapshot;
import com.google.cloud.firestore.QuerySnapshot;
import com.google.firebase.cloud.FirestoreClient;
import java.awt.Font;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import utils.UtilsAnimales;

/**
 *
 * @author Aaron
 */
public class PnlAnimales extends javax.swing.JPanel {

    /**
     * Creates new form PnlAnimales
     */
    private Firestore firestore;
    private JFrame frame;
    
    public PnlAnimales(Firestore firestore, JFrame frame) {
        initComponents();
        Font headerFont = new Font("Segoe UI", Font.PLAIN, 18);
        JTableHeader header = tablaBovino.getTableHeader();
        header.setFont(headerFont);
        header = tablaPorcino.getTableHeader();
        header.setFont(headerFont);
        header = tablaAves.getTableHeader();
        header.setFont(headerFont);
        this.firestore = firestore;
        this.frame = frame;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        addBovino = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        identificacionBovino = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        fechaNacBov = new javax.swing.JTextField();
        hoy3 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        sexoBovino = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        raza = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        momentoReproductivo = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        bovinoVend = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        identificacionPorcino = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        fechaNacPor = new javax.swing.JTextField();
        hoy2 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        sexoPorc = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        razaPorcino = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        porcVend = new javax.swing.JRadioButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        addPorcino = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        lote = new javax.swing.JSpinner();
        jLabel16 = new javax.swing.JLabel();
        cantidadAves = new javax.swing.JSpinner();
        jLabel17 = new javax.swing.JLabel();
        fechaCompraAve = new javax.swing.JTextField();
        hoy = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        aveVend = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        addAve = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        tablasPane = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaBovino = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaPorcino = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaAves = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        borrarRow = new javax.swing.JButton();
        editarRow = new javax.swing.JButton();
        refrescarTabla = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(500, 500));

        jPanel1.setLayout(new java.awt.GridLayout(3, 1));

        jPanel3.setLayout(new java.awt.BorderLayout());
        jPanel3.add(jSeparator1, java.awt.BorderLayout.SOUTH);

        addBovino.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        addBovino.setText("Añadir");
        addBovino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBovinoActionPerformed(evt);
            }
        });
        jPanel3.add(addBovino, java.awt.BorderLayout.LINE_END);

        jPanel6.setMinimumSize(new java.awt.Dimension(900, 39));
        jPanel6.setPreferredSize(new java.awt.Dimension(900, 78));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel4.setText("Nº identificacion");
        jPanel6.add(jLabel4);

        identificacionBovino.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        identificacionBovino.setPreferredSize(new java.awt.Dimension(200, 28));
        jPanel6.add(identificacionBovino);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel5.setText("Fecha de nacimiento/Compra");
        jPanel6.add(jLabel5);

        fechaNacBov.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        fechaNacBov.setText("dd/mm/aaaa");
        fechaNacBov.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fechaNacBovMouseClicked(evt);
            }
        });
        jPanel6.add(fechaNacBov);

        hoy3.setText("Hoy");
        hoy3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hoy3ActionPerformed(evt);
            }
        });
        jPanel6.add(hoy3);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel6.setText("Sexo");
        jPanel6.add(jLabel6);

        sexoBovino.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        sexoBovino.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Macho", "Hembra" }));
        sexoBovino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sexoBovinoActionPerformed(evt);
            }
        });
        jPanel6.add(sexoBovino);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel7.setText("Raza");
        jPanel6.add(jLabel7);

        raza.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jPanel6.add(raza);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel8.setText("Momento reproductivo");
        jPanel6.add(jLabel8);

        momentoReproductivo.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        momentoReproductivo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vaca no gestante", "Vaca gestante", "Vaca en celo o en estro", "Vaca en postparto o lactancia" }));
        momentoReproductivo.setEnabled(false);
        jPanel6.add(momentoReproductivo);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel9.setText("Vendido");
        jPanel6.add(jLabel9);
        jPanel6.add(bovinoVend);

        jPanel3.add(jPanel6, java.awt.BorderLayout.CENTER);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setText("Bovino");
        jPanel3.add(jLabel10, java.awt.BorderLayout.NORTH);

        jPanel1.add(jPanel3);

        jPanel4.setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel1.setText("Nº Identificacion");
        jPanel7.add(jLabel1);

        identificacionPorcino.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        identificacionPorcino.setPreferredSize(new java.awt.Dimension(200, 28));
        jPanel7.add(identificacionPorcino);

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel12.setText("Fecha Nacimiento");
        jPanel7.add(jLabel12);

        fechaNacPor.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        fechaNacPor.setText("dd/mm/aaaa");
        fechaNacPor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fechaNacPorMouseClicked(evt);
            }
        });
        jPanel7.add(fechaNacPor);

        hoy2.setText("Hoy");
        hoy2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hoy2ActionPerformed(evt);
            }
        });
        jPanel7.add(hoy2);

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel13.setText("Sexo");
        jPanel7.add(jLabel13);

        sexoPorc.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        sexoPorc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Macho", "Hembra" }));
        jPanel7.add(sexoPorc);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel11.setText("Raza");
        jPanel7.add(jLabel11);

        razaPorcino.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        razaPorcino.setPreferredSize(new java.awt.Dimension(75, 28));
        jPanel7.add(razaPorcino);

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel14.setText("Vendido");
        jPanel7.add(jLabel14);
        jPanel7.add(porcVend);

        jPanel4.add(jPanel7, java.awt.BorderLayout.CENTER);
        jPanel4.add(jSeparator2, java.awt.BorderLayout.SOUTH);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Porcino");
        jPanel4.add(jLabel2, java.awt.BorderLayout.NORTH);

        addPorcino.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        addPorcino.setText("Añadir");
        addPorcino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPorcinoActionPerformed(evt);
            }
        });
        jPanel4.add(addPorcino, java.awt.BorderLayout.LINE_END);

        jPanel1.add(jPanel4);

        jPanel5.setLayout(new java.awt.BorderLayout());

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel15.setText("Lote");
        jPanel8.add(jLabel15);

        lote.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lote.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        jPanel8.add(lote);

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel16.setText("Cantidad");
        jPanel8.add(jLabel16);

        cantidadAves.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        cantidadAves.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        jPanel8.add(cantidadAves);

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel17.setText("Fecha de compra");
        jPanel8.add(jLabel17);

        fechaCompraAve.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        fechaCompraAve.setText("dd/mm/aaaa");
        fechaCompraAve.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fechaCompraAveMouseClicked(evt);
            }
        });
        jPanel8.add(fechaCompraAve);

        hoy.setText("Hoy");
        hoy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hoyActionPerformed(evt);
            }
        });
        jPanel8.add(hoy);

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel18.setText("Vendido");
        jPanel8.add(jLabel18);
        jPanel8.add(aveVend);

        jPanel5.add(jPanel8, java.awt.BorderLayout.CENTER);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Aves      ");
        jPanel5.add(jLabel3, java.awt.BorderLayout.NORTH);

        addAve.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        addAve.setText("Añadir");
        addAve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAveActionPerformed(evt);
            }
        });
        jPanel5.add(addAve, java.awt.BorderLayout.EAST);

        jPanel1.add(jPanel5);

        jPanel2.setLayout(new java.awt.BorderLayout());

        tablasPane.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tablasPane.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N

        tablaBovino.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tablaBovino.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nº identificacion", "Fecha nacimiento", "Sexo", "Raza", "Momento reproductivo", "Vendido"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tablaBovino.setShowGrid(true);
        jScrollPane2.setViewportView(tablaBovino);

        tablasPane.addTab("Bovino", jScrollPane2);

        tablaPorcino.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tablaPorcino.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nº Identificacion", "Raza", "Fecha de nacimiento", "Sexo", "Vendido"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tablaPorcino);

        tablasPane.addTab("Porcino", jScrollPane3);

        tablaAves.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tablaAves.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Lote", "Cantidad", "Fecha de compra", "Vendido"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.Long.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tablaAves);

        tablasPane.addTab("Aves", jScrollPane4);

        jPanel2.add(tablasPane, java.awt.BorderLayout.CENTER);

        borrarRow.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        borrarRow.setText("Borrar");
        borrarRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarRowActionPerformed(evt);
            }
        });
        jPanel9.add(borrarRow);

        editarRow.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        editarRow.setText("Editar");
        editarRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarRowActionPerformed(evt);
            }
        });
        jPanel9.add(editarRow);

        refrescarTabla.setIcon(new ImageIcon(getClass().getResource("/iconos/recargar.png")));
        refrescarTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refrescarTablaActionPerformed(evt);
            }
        });
        jPanel9.add(refrescarTabla);

        jPanel2.add(jPanel9, java.awt.BorderLayout.SOUTH);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1189, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void fechaNacBovMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fechaNacBovMouseClicked
        fechaNacBov.setText("");
    }//GEN-LAST:event_fechaNacBovMouseClicked

    private void fechaCompraAveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fechaCompraAveMouseClicked
        fechaCompraAve.setText("");
    }//GEN-LAST:event_fechaCompraAveMouseClicked

    private void fechaNacPorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fechaNacPorMouseClicked
        fechaNacPor.setText("");
    }//GEN-LAST:event_fechaNacPorMouseClicked

    private void borrarRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarRowActionPerformed
        UtilsAnimales util = new UtilsAnimales(firestore);
            if(tablasPane.getSelectedIndex() == 0){
                int respuesta = JOptionPane.showOptionDialog(null, "¿Estas seguro de borrarlo?", "Confirmación", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
                if(respuesta == JOptionPane.YES_OPTION){
                    int columna = tablaBovino.getSelectedColumn();
                    int fila = tablaBovino.getSelectedRow();
                    String id = (String) tablaBovino.getValueAt(fila, 0);
                    util.borrarBovino(id);
                    refrescarBovino();
                }
            }else if(tablasPane.getSelectedIndex() == 1){
                int respuesta = JOptionPane.showOptionDialog(null, "¿Estas seguro de borrarlo?", "Confirmación", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
                if(respuesta == JOptionPane.YES_OPTION){
                    int columna = tablaPorcino.getSelectedColumn();
                    int fila = tablaPorcino.getSelectedRow();
                    String id = (String) tablaPorcino.getValueAt(fila, 0);
                    util.borrarPorcino(id);
                    refrescarPorcino();
                    System.out.println(id);
                }
            }else{
                int respuesta = JOptionPane.showOptionDialog(null, "¿Estas seguro de borrarlo?", "Confirmación", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
                if(respuesta == JOptionPane.YES_OPTION){
                    int fila = tablaAves.getSelectedRow();
                    long lote = (Long) tablaAves.getValueAt(fila, 0);
                    util.borrarAve(lote);
                    refrescarAves();
                }
            }
    }//GEN-LAST:event_borrarRowActionPerformed

    private void addBovinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBovinoActionPerformed
        UtilsAnimales util = new UtilsAnimales(this.firestore);
        String nIdent = "";
        String fechaNac = "";
        String sexo = (String) sexoBovino.getSelectedItem();
        String razaS = raza.getText();
        String momRepro = (String) momentoReproductivo.getSelectedItem();
        boolean vendido = bovinoVend.isSelected();
        if(razaS.equals("") || razaS.equals(null)){
            razaS = "Raza sin especificar";
        }
        if(momRepro.equals("") || momRepro.equals(null) || sexo.equals("Macho")){
            momRepro = "No tiene";
        }
        if(util.comprobarFormato(identificacionBovino.getText())){
            nIdent = identificacionBovino.getText();
        }else{
            JOptionPane.showMessageDialog(null, "Error en el numero de identificacion\nTiene que ser ES + 12 digitos numericos", "Error en el numero de identificacion", JOptionPane.ERROR_MESSAGE);
        }
        if(util.comprobarFecha(fechaNacBov.getText())){
            fechaNac = fechaNacBov.getText();
        }else{
            JOptionPane.showMessageDialog(null, "Error en la fecha de nacimiento\nTiene que ser (dd/mm/aaaa)", "Error en la fecha de nacimiento", JOptionPane.ERROR_MESSAGE);
        }
        
        if(util.comprobarFormato(identificacionBovino.getText()) && util.comprobarFecha(fechaNacBov.getText())){
            util.introducirBovino(nIdent, fechaNac, sexo, razaS, momRepro, vendido);
            JOptionPane.showMessageDialog(null, "Bovino " + nIdent + " insertado", "Insercion realizada", JOptionPane.INFORMATION_MESSAGE);
            List<QueryDocumentSnapshot> listaBovinos = util.getBovinos();
            DefaultTableModel modeloTabla = (DefaultTableModel) tablaBovino.getModel();
            modeloTabla.setRowCount(0);
            for (QueryDocumentSnapshot documento : listaBovinos) {
                String fechaNacimiento = documento.getString("Fecha nacimiento");
                String momen = documento.getString("Momento reproductivo");
                String numIde = documento.getString("Numero identificacion");
                String raza = documento.getString("Raza");
                String sexoQ = documento.getString("Sexo");
                boolean vendi = documento.getBoolean("Vendido");
                modeloTabla.addRow(new Object[] {numIde, fechaNacimiento, sexoQ, raza, momen, vendi});
            }
            tablaBovino.setModel(modeloTabla);
        }
    }//GEN-LAST:event_addBovinoActionPerformed

    private void addAveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAveActionPerformed
        UtilsAnimales util = new UtilsAnimales(this.firestore);
        int nLote = (int) lote.getValue();
        int cantAves = (int) cantidadAves.getValue();
        String fechaCompra = fechaCompraAve.getText();
        boolean vendido = aveVend.isSelected();
        if(util.comprobarFecha(fechaCompra)){
            util.introducirAves(nLote, cantAves, fechaCompra, vendido);
            refrescarAves();
            JOptionPane.showMessageDialog(null, "Lote " + nLote + " insertado", "Insercion realizada", JOptionPane.INFORMATION_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(null, "Error en la fecha\nTiene que ser (dd/mm/aaaa)", "Error en la fecha", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addAveActionPerformed

    private void addPorcinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPorcinoActionPerformed
        UtilsAnimales util = new UtilsAnimales(this.firestore);
        String nIdentificacion = "";
        String raza = razaPorcino.getText();
        String fechaNac = "";
        String sexo = (String) sexoPorc.getSelectedItem();
        boolean vendido = porcVend.isSelected();
        if(raza.equals("") || raza.equals(null)){
            raza = "Raza sin especificar";
        }
        if(util.comprobarFormato(identificacionPorcino.getText())){
            nIdentificacion = identificacionPorcino.getText();
        }else{
            JOptionPane.showMessageDialog(null, "Error en el numero de identificacion\nTiene que ser ES + 12 sigitos numericos", "Error en el numero de identificacion", JOptionPane.ERROR_MESSAGE);
        }
        if(util.comprobarFecha(fechaNacPor.getText())){
            fechaNac = fechaNacPor.getText();
        }else{
            JOptionPane.showMessageDialog(null, "Error en la fecha de nacimiento\nTiene que ser (dd/mm/aaaa)", "Error en la fecha de nacimiento", JOptionPane.ERROR_MESSAGE);
        }
        if(util.comprobarFormato(nIdentificacion) && util.comprobarFecha(fechaNac)){
            util.introducirPorcino(nIdentificacion, fechaNac, sexo, raza, vendido);
            refrescarPorcino();
            JOptionPane.showMessageDialog(null, "Cerdo " + nIdentificacion + " insertado", "Insercion realizada", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_addPorcinoActionPerformed

    private void editarRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarRowActionPerformed
        Firestore db = FirestoreClient.getFirestore();
        
        if(tablasPane.getSelectedIndex() == 0){
            if(tablaBovino.getSelectedRow()>= 0){
                String fecha = null, sexo = null, raza = null, momento = null;
                boolean vendi = false;
                int fila = tablaBovino.getSelectedRow();
                String id = (String) tablaBovino.getValueAt(fila, 0);
                try {
                    QuerySnapshot query = db.collection("animales").document("bovino")
                            .collection("bovinos").whereEqualTo("Numero identificacion", id).get().get();
                    System.out.println(query.size());
                    fecha = query.getDocuments().get(0).getString("Fecha nacimiento");
                    sexo = query.getDocuments().get(0).getString("Sexo");
                    raza = query.getDocuments().get(0).getString("Raza");
                    momento = query.getDocuments().get(0).getString("Momento reproductivo");
                    vendi = query.getDocuments().get(0).getBoolean("Vendido");
                } catch (InterruptedException ex) {
                    Logger.getLogger(PnlAnimales.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ExecutionException ex) {
                    Logger.getLogger(PnlAnimales.class.getName()).log(Level.SEVERE, null, ex);
                }
                EditPanelBovino edit = new EditPanelBovino(frame, true, id, fecha, sexo, raza, momento, vendi);
                edit.setVisible(true);
                if(edit.isContinuar()){
                    String idDocu = "";
                    UtilsAnimales util = new UtilsAnimales(firestore);
                    List<QueryDocumentSnapshot> listaBovinos = util.getBovinos();
                    for (QueryDocumentSnapshot documento : listaBovinos) {
                        if(documento.getString("Numero identificacion").equals(id)){
                            idDocu = documento.getId();
                        }
                    }
                    DocumentReference docRef = db.collection("animales").document("bovino").collection("bovinos").document(idDocu);
                    HashMap<String, Object> map = new HashMap();
                    map.put("Numero identificacion", id);
                    map.put("Momento reproductivo", edit.getMomento());
                    map.put("Raza", edit.getRazaa());
                    map.put("Sexo", edit.getSexo());
                    map.put("Fecha nacimiento", edit.getFechaNacS());
                    map.put("Vendido", edit.isVendi());
                    docRef.update(map);
                    refrescarBovino();
                    edit.dispose();
                }
            }
        }else if(tablasPane.getSelectedIndex() == 1){
            if(tablaPorcino.getSelectedRow()>= 0){
                int fila = tablaPorcino.getSelectedRow();
                String id = (String) tablaPorcino.getValueAt(fila, 0);
                String fecha = null, sexo = null, raza = null;
                boolean vendi = false;
                try {
                    QuerySnapshot query = db.collection("animales").document("porcino")
                            .collection("porcinos").whereEqualTo("Numero identificacion", id).get().get();
                    fecha = query.getDocuments().get(0).getString("Fecha nacimiento");
                    sexo = query.getDocuments().get(0).getString("Sexo");
                    raza = query.getDocuments().get(0).getString("Raza");
                    vendi = query.getDocuments().get(0).getBoolean("Vendido");
                } catch (InterruptedException ex) {
                    Logger.getLogger(PnlAnimales.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ExecutionException ex) {
                    Logger.getLogger(PnlAnimales.class.getName()).log(Level.SEVERE, null, ex);
                }
                EditPanelPorcino edit = new EditPanelPorcino(frame, true, id, fecha, sexo, raza, vendi);
                edit.setVisible(true);
                if(edit.isContinuar()){
                    String idDocu = "";
                    UtilsAnimales util = new UtilsAnimales(firestore);
                    List<QueryDocumentSnapshot> listaPorcinos = util.getPorcinos();
                    for (QueryDocumentSnapshot documento : listaPorcinos) {
                        if(documento.getString("Numero identificacion").equals(id)){
                            idDocu = documento.getId();
                        }
                    }
                    DocumentReference docRef = db.collection("animales").document("porcino").collection("porcinos").document(idDocu);
                    HashMap<String, Object> map = new HashMap();
                    map.put("Numero identificacion", id);
                    map.put("Raza", edit.getRaza());
                    map.put("Sexo", edit.getSexo());
                    map.put("Fecha nacimiento", edit.getFecha());
                    map.put("Vendido", edit.isVendi());
                    docRef.update(map);
                    refrescarBovino();
                    edit.dispose();
                }
            }

            refrescarPorcino();
        }else{
            int fila = tablaAves.getSelectedRow();
            long lote = (Long) tablaAves.getValueAt(fila, 0);
            String fecha = null;
            int cant = 0;
            boolean vendi = false;
            try {
                    QuerySnapshot query = db.collection("animales").document("ave")
                            .collection("aves").whereEqualTo("nLote", lote).get().get();
                    fecha = query.getDocuments().get(0).getString("fecha");
                    cant = query.getDocuments().get(0).getLong("cantidad").intValue();
                    vendi = query.getDocuments().get(0).getBoolean("vendido");
                } catch (InterruptedException ex) {
                    Logger.getLogger(PnlAnimales.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ExecutionException ex) {
                    Logger.getLogger(PnlAnimales.class.getName()).log(Level.SEVERE, null, ex);
                }
                EditPanelAves edit = new EditPanelAves(frame, true, lote, cant, fecha, vendi);
                edit.setVisible(true);
                if(edit.isContinuar()){
                    String idDocu = "";
                    UtilsAnimales util = new UtilsAnimales(firestore);
                    List<QueryDocumentSnapshot> listaAves = util.getAves();
                    for (QueryDocumentSnapshot documento : listaAves) {
                        if(documento.getLong("nLote").equals(lote)){
                            idDocu = documento.getId();
                        }
                    }
                    DocumentReference docRef = db.collection("animales").document("ave").collection("aves").document(idDocu);
                    HashMap<String, Object> map = new HashMap();
                    map.put("nLote", lote);
                    map.put("cantidad", edit.getnCant());
                    map.put("fecha", edit.getFechaCompra());
                    map.put("vendido", edit.isVendido());
                    docRef.update(map);
                    edit.dispose();
                }
             refrescarAves();
        }
    }//GEN-LAST:event_editarRowActionPerformed

    private void refrescarTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refrescarTablaActionPerformed
        if(tablasPane.getSelectedIndex() == 0){
            refrescarBovino();
        }else if(tablasPane.getSelectedIndex() == 1){
            refrescarPorcino();
        }else{
            refrescarAves();
        }
        
    }//GEN-LAST:event_refrescarTablaActionPerformed

    private void hoyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hoyActionPerformed
        LocalDate fechaActual = LocalDate.now();
        DateTimeFormatter formato = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        fechaCompraAve.setText(fechaActual.format(formato));
    }//GEN-LAST:event_hoyActionPerformed

    private void sexoBovinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sexoBovinoActionPerformed
        if(sexoBovino.getSelectedItem().equals("Macho")){
            momentoReproductivo.setEnabled(false);
        }else{
            momentoReproductivo.setEnabled(true);
        }
    }//GEN-LAST:event_sexoBovinoActionPerformed

    private void hoy2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hoy2ActionPerformed
        LocalDate fechaActual = LocalDate.now();
        DateTimeFormatter formato = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        fechaNacPor.setText(fechaActual.format(formato));
    }//GEN-LAST:event_hoy2ActionPerformed

    private void hoy3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hoy3ActionPerformed
        LocalDate fechaActual = LocalDate.now();
        DateTimeFormatter formato = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        fechaNacBov.setText(fechaActual.format(formato));
    }//GEN-LAST:event_hoy3ActionPerformed
    
    public void refrescarBovino(){
        UtilsAnimales util = new UtilsAnimales(firestore);
        List<QueryDocumentSnapshot> listaBovinos = util.getBovinos();
        DefaultTableModel modeloTabla = (DefaultTableModel) tablaBovino.getModel();
        modeloTabla.setRowCount(0);
        for (QueryDocumentSnapshot documento : listaBovinos) {
            String fechaNacimiento = documento.getString("Fecha nacimiento");
            String momen = documento.getString("Momento reproductivo");
            String numIde = documento.getString("Numero identificacion");
            String raza = documento.getString("Raza");
            String sexoQ = documento.getString("Sexo");
            boolean vendi = documento.getBoolean("Vendido");
            modeloTabla.addRow(new Object[] {numIde, fechaNacimiento, sexoQ, raza, momen, vendi});
        }
        tablaBovino.setModel(modeloTabla);
    }
    
    public void refrescarPorcino(){
        UtilsAnimales util = new UtilsAnimales(this.firestore);
        List<QueryDocumentSnapshot> listaPorcinos = util.getPorcinos();
        DefaultTableModel modeloTabla = (DefaultTableModel) tablaPorcino.getModel();
        modeloTabla.setRowCount(0);
        for (QueryDocumentSnapshot documento : listaPorcinos) {
            String fechaNacimiento = documento.getString("Fecha nacimiento");
            String numIde = documento.getString("Numero identificacion");
            String raza = documento.getString("Raza");
            String sexoQ = documento.getString("Sexo");
            boolean vendi = documento.getBoolean("Vendido");
            modeloTabla.addRow(new Object[] {numIde, raza, fechaNacimiento, sexoQ, vendi});
        }
        tablaPorcino.setModel(modeloTabla);
    }
    
    public void refrescarAves(){
        UtilsAnimales util = new UtilsAnimales(this.firestore);
        List<QueryDocumentSnapshot> listaAves = util.getAves();
        DefaultTableModel modeloTabla = (DefaultTableModel) tablaAves.getModel();
        modeloTabla.setRowCount(0);
        for (QueryDocumentSnapshot documento : listaAves) {
            Long cant = documento.getLong("cantidad");
            String fecha = documento.getString("fecha");
            Long lote = documento.getLong("nLote");
            boolean vendi = documento.getBoolean("vendido");
            modeloTabla.addRow(new Object[] {lote, cant, fecha, vendi});
        }
        tablaAves.setModel(modeloTabla);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAve;
    private javax.swing.JButton addBovino;
    private javax.swing.JButton addPorcino;
    private javax.swing.JRadioButton aveVend;
    private javax.swing.JButton borrarRow;
    private javax.swing.JRadioButton bovinoVend;
    private javax.swing.JSpinner cantidadAves;
    private javax.swing.JButton editarRow;
    private javax.swing.JTextField fechaCompraAve;
    private javax.swing.JTextField fechaNacBov;
    private javax.swing.JTextField fechaNacPor;
    private javax.swing.JButton hoy;
    private javax.swing.JButton hoy2;
    private javax.swing.JButton hoy3;
    private javax.swing.JTextField identificacionBovino;
    private javax.swing.JTextField identificacionPorcino;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSpinner lote;
    private javax.swing.JComboBox<String> momentoReproductivo;
    private javax.swing.JRadioButton porcVend;
    private javax.swing.JTextField raza;
    private javax.swing.JTextField razaPorcino;
    private javax.swing.JButton refrescarTabla;
    private javax.swing.JComboBox<String> sexoBovino;
    private javax.swing.JComboBox<String> sexoPorc;
    private javax.swing.JTable tablaAves;
    private javax.swing.JTable tablaBovino;
    private javax.swing.JTable tablaPorcino;
    private javax.swing.JTabbedPane tablasPane;
    // End of variables declaration//GEN-END:variables
}
